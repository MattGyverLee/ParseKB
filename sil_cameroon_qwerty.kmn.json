{
    "sil_cameroon_qwerty.kmn": [
        {
            "&VERSION": "10.0",
            "type": "store",
            "line": "store(&VERSION) '10.0'",
            "lineCount": 1
        },
        {
            "&NAME": "Cameroon QWERTY",
            "type": "store",
            "line": "store(&NAME) 'Cameroon QWERTY'",
            "lineCount": 2
        },
        {
            "&COPYRIGHT": "SIL Cameroon 2017",
            "type": "store",
            "line": "store(&COPYRIGHT) 'SIL Cameroon 2017'",
            "lineCount": 3
        },
        {
            "&BITMAP": "Cameroon.ico",
            "type": "store",
            "line": "store(&BITMAP) 'Cameroon.ico'",
            "lineCount": 4
        },
        {
            "&MESSAGE": "Use ; or AltGr to access special characters.",
            "type": "store",
            "line": "store(&MESSAGE) 'Use ; or AltGr to access special characters.'",
            "lineCount": 5
        },
        {
            "&LAYOUTFILE": "sil_cameroon_qwerty-layout.js",
            "type": "store",
            "line": "store(&LAYOUTFILE) 'sil_cameroon_qwerty-layout.js'",
            "lineCount": 6
        },
        {
            "&KEYBOARDVERSION": "5.0",
            "type": "store",
            "line": "store(&KEYBOARDVERSION) '5.0'",
            "lineCount": 7
        },
        {
            "&VISUALKEYBOARD": "sil_cameroon_qwerty.kvks",
            "type": "store",
            "line": "store(&VISUALKEYBOARD) 'sil_cameroon_qwerty.kvks'",
            "lineCount": 8
        },
        {
            "&TARGETS": "any",
            "type": "store",
            "line": "store(&TARGETS) 'any'",
            "lineCount": 9
        },
        {
            "&KMW_EMBEDCSS": "sil_cameroon_qwerty.css",
            "type": "store",
            "line": "store(&KMW_EMBEDCSS) 'sil_cameroon_qwerty.css'",
            "lineCount": 10
        },
        {
            "type": "goTo",
            "inputs": [
                "begin",
                "Unicode"
            ],
            "outputs": [
                "USE(MAIN)"
            ],
            "line": "begin Unicode > use(main)",
            "lineCount": 11
        },
        {
            "line": "group(main) using keys",
            "lineCount": 12,
            "type": "structural"
        },
        {
            "storeName": "word",
            "fullStore": "\"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4zA\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc-'\" U+0300 U+0304 U+0301 U+030C U+0302 U+0303 U+0308 U+0327 U+03B1 U+030D U+0330",
            "type": "store",
            "storeItems": [
                "U+0061",
                "U+00e6",
                "U+025b",
                "U+0062",
                "U+0253",
                "U+0063",
                "U+0064",
                "U+0257",
                "U+0065",
                "U+0259",
                "U+0066",
                "U+0067",
                "U+02bc",
                "U+a78c",
                "U+0068",
                "U+0069",
                "U+0268",
                "U+006a",
                "U+006b",
                "U+006c",
                "U+006d",
                "U+006e",
                "U+014b",
                "U+006f",
                "U+0254",
                "U+00f8",
                "U+0153",
                "U+0070",
                "U+0071",
                "U+0072",
                "U+0073",
                "U+0074",
                "U+0075",
                "U+0289",
                "U+0076",
                "U+0077",
                "U+1e85",
                "U+0078",
                "U+0079",
                "U+01b4",
                "U+007a",
                "U+0041",
                "U+00c6",
                "U+0190",
                "U+0042",
                "U+0181",
                "U+0043",
                "U+0044",
                "U+018a",
                "U+0045",
                "U+018f",
                "U+0046",
                "U+0047",
                "U+02bc",
                "U+a78b",
                "U+0048",
                "U+0049",
                "U+0197",
                "U+004a",
                "U+004b",
                "U+004c",
                "U+004d",
                "U+004e",
                "U+014a",
                "U+004f",
                "U+0186",
                "U+00d8",
                "U+0152",
                "U+0050",
                "U+0051",
                "U+0052",
                "U+0053",
                "U+0054",
                "U+0055",
                "U+0289",
                "U+0056",
                "U+0057",
                "U+1e84",
                "U+0058",
                "U+0059",
                "U+01b3",
                "U+005a",
                "U+25cc",
                "U+002d",
                "U+0027",
                "U+0300",
                "U+0304",
                "U+0301",
                "U+030C",
                "U+0302",
                "U+0303",
                "U+0308",
                "U+0327",
                "U+03B1",
                "U+030D",
                "U+0330"
            ],
            "line": "store(word) \"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4zA\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc-'\" U+0300 U+0304 U+0301 U+030C U+0302 U+0303 U+0308 U+0327 U+03B1 U+030D U+0330",
            "lineCount": 13
        },
        {
            "storeName": "letter",
            "fullStore": "\"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4zA\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc\"",
            "type": "store",
            "storeItems": [
                "U+0061",
                "U+00e6",
                "U+025b",
                "U+0062",
                "U+0253",
                "U+0063",
                "U+0064",
                "U+0257",
                "U+0065",
                "U+0259",
                "U+0066",
                "U+0067",
                "U+02bc",
                "U+a78c",
                "U+0068",
                "U+0069",
                "U+0268",
                "U+006a",
                "U+006b",
                "U+006c",
                "U+006d",
                "U+006e",
                "U+014b",
                "U+006f",
                "U+0254",
                "U+00f8",
                "U+0153",
                "U+0070",
                "U+0071",
                "U+0072",
                "U+0073",
                "U+0074",
                "U+0075",
                "U+0289",
                "U+0076",
                "U+0077",
                "U+1e85",
                "U+0078",
                "U+0079",
                "U+01b4",
                "U+007a",
                "U+0041",
                "U+00c6",
                "U+0190",
                "U+0042",
                "U+0181",
                "U+0043",
                "U+0044",
                "U+018a",
                "U+0045",
                "U+018f",
                "U+0046",
                "U+0047",
                "U+02bc",
                "U+a78b",
                "U+0048",
                "U+0049",
                "U+0197",
                "U+004a",
                "U+004b",
                "U+004c",
                "U+004d",
                "U+004e",
                "U+014a",
                "U+004f",
                "U+0186",
                "U+00d8",
                "U+0152",
                "U+0050",
                "U+0051",
                "U+0052",
                "U+0053",
                "U+0054",
                "U+0055",
                "U+0289",
                "U+0056",
                "U+0057",
                "U+1e84",
                "U+0058",
                "U+0059",
                "U+01b3",
                "U+005a",
                "U+25cc"
            ],
            "line": "store(letter) \"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4zA\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc\"",
            "lineCount": 14
        },
        {
            "storeName": "lc",
            "fullStore": "\"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4z\u25cc\"",
            "type": "store",
            "storeItems": [
                "U+0061",
                "U+00e6",
                "U+025b",
                "U+0062",
                "U+0253",
                "U+0063",
                "U+0064",
                "U+0257",
                "U+0065",
                "U+0259",
                "U+0066",
                "U+0067",
                "U+02bc",
                "U+a78c",
                "U+0068",
                "U+0069",
                "U+0268",
                "U+006a",
                "U+006b",
                "U+006c",
                "U+006d",
                "U+006e",
                "U+014b",
                "U+006f",
                "U+0254",
                "U+00f8",
                "U+0153",
                "U+0070",
                "U+0071",
                "U+0072",
                "U+0073",
                "U+0074",
                "U+0075",
                "U+0289",
                "U+0076",
                "U+0077",
                "U+1e85",
                "U+0078",
                "U+0079",
                "U+01b4",
                "U+007a",
                "U+25cc"
            ],
            "line": "store(lc) \"a\u00e6\u025bb\u0253cd\u0257e\u0259fg\u02bc\ua78chi\u0268jklmn\u014bo\u0254\u00f8\u0153pqrstu\u0289vw\u1e85xy\u01b4z\u25cc\"",
            "lineCount": 15
        },
        {
            "storeName": "uc",
            "fullStore": "\"A\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc\"",
            "type": "store",
            "storeItems": [
                "U+0041",
                "U+00c6",
                "U+0190",
                "U+0042",
                "U+0181",
                "U+0043",
                "U+0044",
                "U+018a",
                "U+0045",
                "U+018f",
                "U+0046",
                "U+0047",
                "U+02bc",
                "U+a78b",
                "U+0048",
                "U+0049",
                "U+0197",
                "U+004a",
                "U+004b",
                "U+004c",
                "U+004d",
                "U+004e",
                "U+014a",
                "U+004f",
                "U+0186",
                "U+00d8",
                "U+0152",
                "U+0050",
                "U+0051",
                "U+0052",
                "U+0053",
                "U+0054",
                "U+0055",
                "U+0289",
                "U+0056",
                "U+0057",
                "U+1e84",
                "U+0058",
                "U+0059",
                "U+01b3",
                "U+005a",
                "U+25cc"
            ],
            "line": "store(uc) \"A\u00c6\u0190B\u0181CD\u018aE\u018fFG\u02bc\ua78bHI\u0197JKLMN\u014aO\u0186\u00d8\u0152PQRSTU\u0289VW\u1e84XY\u01b3Z\u25cc\"",
            "lineCount": 16
        },
        {
            "storeName": "nfpunct",
            "fullStore": "\",:;\"",
            "type": "store",
            "storeItems": [
                "U+002c",
                "U+003a",
                "U+003b"
            ],
            "line": "store(nfpunct) \",:;\"",
            "lineCount": 17
        },
        {
            "storeName": "final",
            "fullStore": "\".!?\"",
            "type": "store",
            "storeItems": [
                "U+002e",
                "U+0021",
                "U+003f"
            ],
            "line": "store(final) \".!?\"",
            "lineCount": 18
        },
        {
            "storeName": "num",
            "fullStore": "\"0123456789\"",
            "type": "store",
            "storeItems": [
                "U+0030",
                "U+0031",
                "U+0032",
                "U+0033",
                "U+0034",
                "U+0035",
                "U+0036",
                "U+0037",
                "U+0038",
                "U+0039"
            ],
            "line": "store(num) \"0123456789\"",
            "lineCount": 19
        },
        {
            "storeName": "diablock) \" 0123456789?!;:'-_=<\u00a9\u00ae>.,[]{}\\|/@\u00b0#$%^&*(",
            "fullStore": "\" 0123456789?!;:'-_=<\u00a9\u00ae>.,[]{}\\|/@\u00b0#$%^&*()\u00ab\u00bb\u2039\u203a\u2018\u201c\u2019\u201d\u20ac\u00a5\u00a3\u2026\u2020\" U+0022",
            "type": "store",
            "storeItems": [
                "U+0020",
                "U+0030",
                "U+0031",
                "U+0032",
                "U+0033",
                "U+0034",
                "U+0035",
                "U+0036",
                "U+0037",
                "U+0038",
                "U+0039",
                "U+003f",
                "U+0021",
                "U+003b",
                "U+003a",
                "U+0027",
                "U+002d",
                "U+005f",
                "U+003d",
                "U+003c",
                "U+00a9",
                "U+00ae",
                "U+003e",
                "U+002e",
                "U+002c",
                "U+005b",
                "U+005d",
                "U+007b",
                "U+007d",
                "U+005c",
                "U+007c",
                "U+002f",
                "U+0040",
                "U+00b0",
                "U+0023",
                "U+0024",
                "U+0025",
                "U+005e",
                "U+0026",
                "U+002a",
                "U+0028",
                "U+0029",
                "U+00ab",
                "U+00bb",
                "U+2039",
                "U+203a",
                "U+2018",
                "U+201c",
                "U+2019",
                "U+201d",
                "U+20ac",
                "U+00a5",
                "U+00a3",
                "U+2026",
                "U+2020",
                "U+0022"
            ],
            "line": "store(diablock) \" 0123456789?!;:'-_=<\u00a9\u00ae>.,[]{}\\|/@\u00b0#$%^&*()\u00ab\u00bb\u2039\u203a\u2018\u201c\u2019\u201d\u20ac\u00a5\u00a3\u2026\u2020\" U+0022",
            "lineCount": 20
        },
        {
            "storeName": "dia",
            "fullStore": "U+0300 U+0304 U+0301 U+030C U+0302 U+0303 U+0308 U+0327 U+030D U+0330",
            "type": "store",
            "storeItems": [
                "U+0300",
                "U+0304",
                "U+0301",
                "U+030C",
                "U+0302",
                "U+0303",
                "U+0308",
                "U+0327",
                "U+030D",
                "U+0330"
            ],
            "line": "store(dia) U+0300 U+0304 U+0301 U+030C U+0302 U+0303 U+0308 U+0327 U+030D U+0330",
            "lineCount": 21
        },
        {
            "type": "rule.touch.expandable",
            "inputs": [
                "platform('touch')",
                "any(word)",
                "any(final)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SPACE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "index(word,2)",
                "index(final,3)",
                "U+0020",
                "LAYER('SHIFT')"
            ],
            "line": "platform('touch') any(word) any(final) + [K_SPACE] > index(word,2) index(final,3) \" \" layer('shift')",
            "lineCount": 22
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SPACE"
                }
            ],
            "outputs": [
                "U+0020"
            ],
            "line": "+ [K_SPACE] > U+0020",
            "lineCount": 23
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SPACE"
                }
            ],
            "outputs": [
                "U+0020"
            ],
            "line": "+ [SHIFT K_SPACE] > U+0020",
            "lineCount": 24
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": true,
                    "isCTRL": false,
                    "isKey": "K_SPACE"
                }
            ],
            "outputs": [
                "U+00A0"
            ],
            "line": "+ [LCTRL K_SPACE] > U+00A0",
            "lineCount": 25
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": true,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SPACE"
                }
            ],
            "outputs": [
                "U+00A0"
            ],
            "line": "+ [RCTRL K_SPACE] > U+00A0",
            "lineCount": 26
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+0030"
            ],
            "line": "+ [CAPS K_0] > U+0030",
            "lineCount": 27
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+2019"
            ],
            "line": "+ [CAPS RALT K_0] > U+2019",
            "lineCount": 28
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+0029"
            ],
            "line": "+ [CAPS SHIFT K_0] > U+0029",
            "lineCount": 29
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+201D"
            ],
            "line": "+ [CAPS SHIFT RALT K_0] > U+201d",
            "lineCount": 30
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+0030"
            ],
            "line": "+ [NCAPS K_0] > U+0030",
            "lineCount": 31
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+2019"
            ],
            "line": "+ [NCAPS RALT K_0] > U+2019",
            "lineCount": 32
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+0029"
            ],
            "line": "+ [NCAPS SHIFT K_0] > U+0029",
            "lineCount": 33
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_0"
                }
            ],
            "outputs": [
                "U+201D"
            ],
            "line": "+ [NCAPS SHIFT RALT K_0] > U+201d",
            "lineCount": 34
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+0031"
            ],
            "line": "+ [CAPS K_1] > U+0031",
            "lineCount": 35
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+00BC"
            ],
            "line": "+ [CAPS RALT K_1] > U+00bc",
            "lineCount": 36
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+0021"
            ],
            "line": "+ [CAPS SHIFT K_1] > U+0021",
            "lineCount": 37
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_1] > BEEP",
            "lineCount": 38
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+0031"
            ],
            "line": "+ [NCAPS K_1] > U+0031",
            "lineCount": 39
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+00BC"
            ],
            "line": "+ [NCAPS RALT K_1] > U+00bc",
            "lineCount": 40
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "U+0021"
            ],
            "line": "+ [NCAPS SHIFT K_1] > U+0021",
            "lineCount": 41
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_1"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_1] > BEEP",
            "lineCount": 42
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+0032"
            ],
            "line": "+ [CAPS K_2] > U+0032",
            "lineCount": 43
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+00BD"
            ],
            "line": "+ [CAPS RALT K_2] > U+00bd",
            "lineCount": 44
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+0040"
            ],
            "line": "+ [CAPS SHIFT K_2] > U+0040",
            "lineCount": 45
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_2] > BEEP",
            "lineCount": 46
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+0032"
            ],
            "line": "+ [NCAPS K_2] > U+0032",
            "lineCount": 47
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+00BD"
            ],
            "line": "+ [NCAPS RALT K_2] > U+00bd",
            "lineCount": 48
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "U+0040"
            ],
            "line": "+ [NCAPS SHIFT K_2] > U+0040",
            "lineCount": 49
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_2"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_2] > BEEP",
            "lineCount": 50
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+0033"
            ],
            "line": "+ [CAPS K_3] > U+0033",
            "lineCount": 51
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+00BE"
            ],
            "line": "+ [CAPS RALT K_3] > U+00be",
            "lineCount": 52
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+0023"
            ],
            "line": "+ [CAPS SHIFT K_3] > U+0023",
            "lineCount": 53
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_3] > BEEP",
            "lineCount": 54
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+0033"
            ],
            "line": "+ [NCAPS K_3] > U+0033",
            "lineCount": 55
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+00BE"
            ],
            "line": "+ [NCAPS RALT K_3] > U+00be",
            "lineCount": 56
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "U+0023"
            ],
            "line": "+ [NCAPS SHIFT K_3] > U+0023",
            "lineCount": 57
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_3"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_3] > BEEP",
            "lineCount": 58
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+0034"
            ],
            "line": "+ [CAPS K_4] > U+0034",
            "lineCount": 59
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_4] > BEEP",
            "lineCount": 60
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+0024"
            ],
            "line": "+ [CAPS SHIFT K_4] > U+0024",
            "lineCount": 61
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+20AC"
            ],
            "line": "+ [CAPS SHIFT RALT K_4] > U+20ac",
            "lineCount": 62
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+0034"
            ],
            "line": "+ [NCAPS K_4] > U+0034",
            "lineCount": 63
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_4] > BEEP",
            "lineCount": 64
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+0024"
            ],
            "line": "+ [NCAPS SHIFT K_4] > U+0024",
            "lineCount": 65
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_4"
                }
            ],
            "outputs": [
                "U+20AC"
            ],
            "line": "+ [NCAPS SHIFT RALT K_4] > U+20ac",
            "lineCount": 66
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "U+0035"
            ],
            "line": "+ [CAPS K_5] > U+0035",
            "lineCount": 67
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_5] > BEEP",
            "lineCount": 68
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "U+0025"
            ],
            "line": "+ [CAPS SHIFT K_5] > U+0025",
            "lineCount": 69
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_5] > BEEP",
            "lineCount": 70
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "U+0035"
            ],
            "line": "+ [NCAPS K_5] > U+0035",
            "lineCount": 71
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_5] > BEEP",
            "lineCount": 72
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "U+0025"
            ],
            "line": "+ [NCAPS SHIFT K_5] > U+0025",
            "lineCount": 73
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_5"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_5] > BEEP",
            "lineCount": 74
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "U+0036"
            ],
            "line": "+ [CAPS K_6] > U+0036",
            "lineCount": 75
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_6] > BEEP",
            "lineCount": 76
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "U+005E"
            ],
            "line": "+ [CAPS SHIFT K_6] > U+005e",
            "lineCount": 77
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_6] > BEEP",
            "lineCount": 78
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "U+0036"
            ],
            "line": "+ [NCAPS K_6] > U+0036",
            "lineCount": 79
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_6] > BEEP",
            "lineCount": 80
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "U+005E"
            ],
            "line": "+ [NCAPS SHIFT K_6] > U+005e",
            "lineCount": 81
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_6"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_6] > BEEP",
            "lineCount": 82
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "U+0037"
            ],
            "line": "+ [CAPS K_7] > U+0037",
            "lineCount": 83
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_7] > BEEP",
            "lineCount": 84
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "U+0026"
            ],
            "line": "+ [CAPS SHIFT K_7] > U+0026",
            "lineCount": 85
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS SHIFT RALT K_7] > BEEP",
            "lineCount": 86
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "U+0037"
            ],
            "line": "+ [NCAPS K_7] > U+0037",
            "lineCount": 87
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_7] > BEEP",
            "lineCount": 88
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "U+0026"
            ],
            "line": "+ [NCAPS SHIFT K_7] > U+0026",
            "lineCount": 89
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_7"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS SHIFT RALT K_7] > BEEP",
            "lineCount": 90
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+0038"
            ],
            "line": "+ [CAPS K_8] > U+0038",
            "lineCount": 91
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_8] > BEEP",
            "lineCount": 92
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+002A"
            ],
            "line": "+ [CAPS SHIFT K_8] > U+002a",
            "lineCount": 93
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+00D7"
            ],
            "line": "+ [CAPS SHIFT RALT K_8] > U+00d7",
            "lineCount": 94
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+0038"
            ],
            "line": "+ [NCAPS K_8] > U+0038",
            "lineCount": 95
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_8] > BEEP",
            "lineCount": 96
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+002A"
            ],
            "line": "+ [NCAPS SHIFT K_8] > U+002a",
            "lineCount": 97
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_8"
                }
            ],
            "outputs": [
                "U+00D7"
            ],
            "line": "+ [NCAPS SHIFT RALT K_8] > U+00d7",
            "lineCount": 98
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+0039"
            ],
            "line": "+ [CAPS K_9] > U+0039",
            "lineCount": 99
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+2018"
            ],
            "line": "+ [CAPS RALT K_9] > U+2018",
            "lineCount": 100
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+0028"
            ],
            "line": "+ [CAPS SHIFT K_9] > U+0028",
            "lineCount": 101
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+201C"
            ],
            "line": "+ [CAPS SHIFT RALT K_9] > U+201c",
            "lineCount": 102
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+0039"
            ],
            "line": "+ [NCAPS K_9] > U+0039",
            "lineCount": 103
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+2018"
            ],
            "line": "+ [NCAPS RALT K_9] > U+2018",
            "lineCount": 104
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+0028"
            ],
            "line": "+ [NCAPS SHIFT K_9] > U+0028",
            "lineCount": 105
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_9"
                }
            ],
            "outputs": [
                "U+201C"
            ],
            "line": "+ [NCAPS SHIFT RALT K_9] > U+201c",
            "lineCount": 106
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0041"
            ],
            "line": "+ [CAPS K_A] > U+0041",
            "lineCount": 107
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0190"
            ],
            "line": "+ [CAPS RALT K_A] > U+0190",
            "lineCount": 108
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0061"
            ],
            "line": "+ [CAPS SHIFT K_A] > U+0061",
            "lineCount": 109
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+025B"
            ],
            "line": "+ [CAPS SHIFT RALT K_A] > U+025b",
            "lineCount": 110
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0061"
            ],
            "line": "+ [NCAPS K_A] > U+0061",
            "lineCount": 111
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+025B"
            ],
            "line": "+ [NCAPS RALT K_A] > U+025b",
            "lineCount": 112
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0041"
            ],
            "line": "+ [NCAPS SHIFT K_A] > U+0041",
            "lineCount": 113
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_A"
                }
            ],
            "outputs": [
                "U+0190"
            ],
            "line": "+ [NCAPS SHIFT RALT K_A] > U+0190",
            "lineCount": 114
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0042"
            ],
            "line": "+ [CAPS K_B] > U+0042",
            "lineCount": 115
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0253"
            ],
            "line": "+ [CAPS RALT K_B] > U+0253",
            "lineCount": 116
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0062"
            ],
            "line": "+ [CAPS SHIFT K_B] > U+0062",
            "lineCount": 117
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0253"
            ],
            "line": "+ [CAPS SHIFT RALT K_B] > U+0253",
            "lineCount": 118
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0062"
            ],
            "line": "+ [NCAPS K_B] > U+0062",
            "lineCount": 119
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0253"
            ],
            "line": "+ [NCAPS RALT K_B] > U+0253",
            "lineCount": 120
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0042"
            ],
            "line": "+ [NCAPS SHIFT K_B] > U+0042",
            "lineCount": 121
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_B"
                }
            ],
            "outputs": [
                "U+0181"
            ],
            "line": "+ [NCAPS SHIFT RALT K_B] > U+0181",
            "lineCount": 122
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0043"
            ],
            "line": "+ [CAPS K_C] > U+0043",
            "lineCount": 123
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+00A9"
            ],
            "line": "+ [CAPS RALT K_C] > U+00a9",
            "lineCount": 124
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0063"
            ],
            "line": "+ [CAPS SHIFT K_C] > U+0063",
            "lineCount": 125
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "+ [CAPS SHIFT RALT K_C] > U+0327",
            "lineCount": 126
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0063"
            ],
            "line": "+ [NCAPS K_C] > U+0063",
            "lineCount": 127
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "+ [NCAPS RALT K_C] > U+0327",
            "lineCount": 128
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+0043"
            ],
            "line": "+ [NCAPS SHIFT K_C] > U+0043",
            "lineCount": 129
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "outputs": [
                "U+00A9"
            ],
            "line": "+ [NCAPS SHIFT RALT K_C] > U+00a9",
            "lineCount": 130
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS RALT K_C] > context",
            "lineCount": 131
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_C"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT RALT K_C] > context",
            "lineCount": 132
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0044"
            ],
            "line": "+ [CAPS K_D] > U+0044",
            "lineCount": 133
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+018A"
            ],
            "line": "+ [CAPS RALT K_D] > U+018a",
            "lineCount": 134
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0064"
            ],
            "line": "+ [CAPS SHIFT K_D] > U+0064",
            "lineCount": 135
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0257"
            ],
            "line": "+ [CAPS SHIFT RALT K_D] > U+0257",
            "lineCount": 136
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0064"
            ],
            "line": "+ [NCAPS K_D] > U+0064",
            "lineCount": 137
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0257"
            ],
            "line": "+ [NCAPS RALT K_D] > U+0257",
            "lineCount": 138
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+0044"
            ],
            "line": "+ [NCAPS SHIFT K_D] > U+0044",
            "lineCount": 139
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_D"
                }
            ],
            "outputs": [
                "U+018A"
            ],
            "line": "+ [NCAPS SHIFT RALT K_D] > U+018a",
            "lineCount": 140
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0045"
            ],
            "line": "+ [CAPS K_E] > U+0045",
            "lineCount": 141
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+018F"
            ],
            "line": "+ [CAPS RALT K_E] > U+018f",
            "lineCount": 142
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0065"
            ],
            "line": "+ [CAPS SHIFT K_E] > U+0065",
            "lineCount": 143
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0259"
            ],
            "line": "+ [CAPS SHIFT RALT K_E] > U+0259",
            "lineCount": 144
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0065"
            ],
            "line": "+ [NCAPS K_E] > U+0065",
            "lineCount": 145
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0259"
            ],
            "line": "+ [NCAPS RALT K_E] > U+0259",
            "lineCount": 146
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+0045"
            ],
            "line": "+ [NCAPS SHIFT K_E] > U+0045",
            "lineCount": 147
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_E"
                }
            ],
            "outputs": [
                "U+018F"
            ],
            "line": "+ [NCAPS SHIFT RALT K_E] > U+018f",
            "lineCount": 148
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+0046"
            ],
            "line": "+ [CAPS K_F] > U+0046",
            "lineCount": 149
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+00C6"
            ],
            "line": "+ [CAPS RALT K_F] > U+00c6",
            "lineCount": 150
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+0066"
            ],
            "line": "+ [CAPS SHIFT K_F] > U+0066",
            "lineCount": 151
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+00E6"
            ],
            "line": "+ [CAPS SHIFT RALT K_F] > U+00e6",
            "lineCount": 152
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+0066"
            ],
            "line": "+ [NCAPS K_F] > U+0066",
            "lineCount": 153
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+00E6"
            ],
            "line": "+ [NCAPS RALT K_F] > U+00e6",
            "lineCount": 154
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+0046"
            ],
            "line": "+ [NCAPS SHIFT K_F] > U+0046",
            "lineCount": 155
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_F"
                }
            ],
            "outputs": [
                "U+00C6"
            ],
            "line": "+ [NCAPS SHIFT RALT K_F] > U+00c6",
            "lineCount": 156
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+0047"
            ],
            "line": "+ [CAPS K_G] > U+0047",
            "lineCount": 157
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "+ [CAPS RALT K_G] > U+a78b",
            "lineCount": 158
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+0067"
            ],
            "line": "+ [CAPS SHIFT K_G] > U+0067",
            "lineCount": 159
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+02BC"
            ],
            "line": "+ [CAPS SHIFT RALT K_G] > U+02bc",
            "lineCount": 160
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+0067"
            ],
            "line": "+ [NCAPS K_G] > U+0067",
            "lineCount": 161
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+02BC"
            ],
            "line": "+ [NCAPS RALT K_G] > U+02bc",
            "lineCount": 162
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+0047"
            ],
            "line": "+ [NCAPS SHIFT K_G] > U+0047",
            "lineCount": 163
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_G"
                }
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "+ [NCAPS SHIFT RALT K_G] > U+a78b",
            "lineCount": 164
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+0048"
            ],
            "line": "+ [CAPS K_H] > U+0048",
            "lineCount": 165
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+2C6D"
            ],
            "line": "+ [CAPS RALT K_H] > U+2c6d",
            "lineCount": 166
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+0068"
            ],
            "line": "+ [CAPS SHIFT K_H] > U+0068",
            "lineCount": 167
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+03B1"
            ],
            "line": "+ [CAPS SHIFT RALT K_H] > U+03b1",
            "lineCount": 168
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+0068"
            ],
            "line": "+ [NCAPS K_H] > U+0068",
            "lineCount": 169
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+03B1"
            ],
            "line": "+ [NCAPS RALT K_H] > U+03b1",
            "lineCount": 170
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+0048"
            ],
            "line": "+ [NCAPS SHIFT K_H] > U+0048",
            "lineCount": 171
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_H"
                }
            ],
            "outputs": [
                "U+2C6D"
            ],
            "line": "+ [NCAPS SHIFT RALT K_H] > U+2c6d",
            "lineCount": 172
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0049"
            ],
            "line": "+ [CAPS K_I] > U+0049",
            "lineCount": 173
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0197"
            ],
            "line": "+ [CAPS RALT K_I] > U+0197",
            "lineCount": 174
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0069"
            ],
            "line": "+ [CAPS SHIFT K_I] > U+0069",
            "lineCount": 175
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0268"
            ],
            "line": "+ [CAPS SHIFT RALT K_I] > U+0268",
            "lineCount": 176
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0069"
            ],
            "line": "+ [NCAPS K_I] > U+0069",
            "lineCount": 177
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0268"
            ],
            "line": "+ [NCAPS RALT K_I] > U+0268",
            "lineCount": 178
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0049"
            ],
            "line": "+ [NCAPS SHIFT K_I] > U+0049",
            "lineCount": 179
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_I"
                }
            ],
            "outputs": [
                "U+0197"
            ],
            "line": "+ [NCAPS SHIFT RALT K_I] > U+0197",
            "lineCount": 180
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+004A"
            ],
            "line": "+ [CAPS K_J] > U+004a",
            "lineCount": 181
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+0323"
            ],
            "line": "+ [CAPS RALT K_J] > U+0323",
            "lineCount": 182
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+006A"
            ],
            "line": "+ [CAPS SHIFT K_J] > U+006a",
            "lineCount": 183
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+0330"
            ],
            "line": "+ [CAPS SHIFT RALT K_J] > U+0330",
            "lineCount": 184
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+006A"
            ],
            "line": "+ [NCAPS K_J] > U+006a",
            "lineCount": 185
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+0330"
            ],
            "line": "+ [NCAPS RALT K_J] > U+0330",
            "lineCount": 186
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+004A"
            ],
            "line": "+ [NCAPS SHIFT K_J] > U+004a",
            "lineCount": 187
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "outputs": [
                "U+0323"
            ],
            "line": "+ [NCAPS SHIFT RALT K_J] > U+0323",
            "lineCount": 188
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS RALT K_J] > context",
            "lineCount": 189
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT RALT K_J] > context",
            "lineCount": 190
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS RALT K_J] > context",
            "lineCount": 191
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_J"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT RALT K_J] > context",
            "lineCount": 192
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+004B"
            ],
            "line": "+ [CAPS K_K] > U+004b",
            "lineCount": 193
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+1DC7"
            ],
            "line": "+ [CAPS RALT K_K] > U+1dc7",
            "lineCount": 194
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+006B"
            ],
            "line": "+ [CAPS SHIFT K_K] > U+006b",
            "lineCount": 195
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+1DC5"
            ],
            "line": "+ [CAPS SHIFT RALT K_K] > U+1dc5",
            "lineCount": 196
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+006B"
            ],
            "line": "+ [NCAPS K_K] > U+006b",
            "lineCount": 197
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+1DC5"
            ],
            "line": "+ [NCAPS RALT K_K] > U+1dc5",
            "lineCount": 198
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+004B"
            ],
            "line": "+ [NCAPS SHIFT K_K] > U+004b",
            "lineCount": 199
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "outputs": [
                "U+1DC7"
            ],
            "line": "+ [NCAPS SHIFT RALT K_K] > U+1dc7",
            "lineCount": 200
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT RALT K_K] > context",
            "lineCount": 201
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS RALT K_K] > context",
            "lineCount": 202
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS RALT K_K] > context",
            "lineCount": 203
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_K"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT RALT K_K] > context",
            "lineCount": 204
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+004C"
            ],
            "line": "+ [CAPS K_L] > U+004c",
            "lineCount": 205
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+006C"
            ],
            "line": "+ [CAPS SHIFT K_L] > U+006c",
            "lineCount": 206
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+1DC6"
            ],
            "line": "+ [CAPS SHIFT RALT K_L] > U+1dc6",
            "lineCount": 207
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+006C"
            ],
            "line": "+ [NCAPS K_L] > U+006c",
            "lineCount": 208
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+1DC6"
            ],
            "line": "+ [NCAPS RALT K_L] > U+1dc6",
            "lineCount": 209
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+004C"
            ],
            "line": "+ [NCAPS SHIFT K_L] > U+004c",
            "lineCount": 210
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+1DC4"
            ],
            "line": "+ [NCAPS SHIFT RALT K_L] > U+1dc4",
            "lineCount": 211
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "outputs": [
                "U+1DC4"
            ],
            "line": "+ [CAPS RALT K_L] > U+1dc4",
            "lineCount": 212
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS RALT K_L] > context",
            "lineCount": 213
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT RALT K_L] > context",
            "lineCount": 214
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS RALT K_L] > context",
            "lineCount": 215
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_L"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT RALT K_L] > context",
            "lineCount": 216
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+004D"
            ],
            "line": "+ [CAPS K_M] > U+004d",
            "lineCount": 217
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+004D"
            ],
            "line": "+ [CAPS RALT K_M] > U+004d",
            "lineCount": 218
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+2122"
            ],
            "line": "+ [CAPS RALT SHIFT K_M] > U+2122",
            "lineCount": 219
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+006D"
            ],
            "line": "+ [CAPS SHIFT K_M] > U+006d",
            "lineCount": 220
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+006D"
            ],
            "line": "+ [NCAPS K_M] > U+006d",
            "lineCount": 221
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_M] > BEEP",
            "lineCount": 222
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+2122"
            ],
            "line": "+ [NCAPS RALT SHIFT K_M] > U+2122",
            "lineCount": 223
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_M"
                }
            ],
            "outputs": [
                "U+004D"
            ],
            "line": "+ [NCAPS SHIFT K_M] > U+004d",
            "lineCount": 224
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+004E"
            ],
            "line": "+ [CAPS K_N] > U+004e",
            "lineCount": 225
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+006E"
            ],
            "line": "+ [CAPS SHIFT K_N] > U+006e",
            "lineCount": 226
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+014B"
            ],
            "line": "+ [CAPS SHIFT RALT K_N] > U+014b",
            "lineCount": 227
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+006E"
            ],
            "line": "+ [NCAPS K_N] > U+006e",
            "lineCount": 228
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+014B"
            ],
            "line": "+ [NCAPS RALT K_N] > U+014b",
            "lineCount": 229
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+004E"
            ],
            "line": "+ [NCAPS SHIFT K_N] > U+004e",
            "lineCount": 230
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+014A"
            ],
            "line": "+ [NCAPS SHIFT RALT K_N] > U+014a",
            "lineCount": 231
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_N"
                }
            ],
            "outputs": [
                "U+014A"
            ],
            "line": "+ [CAPS RALT K_N] > U+014a",
            "lineCount": 232
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+004F"
            ],
            "line": "+ [CAPS K_O] > U+004f",
            "lineCount": 233
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+006F"
            ],
            "line": "+ [CAPS SHIFT K_O] > U+006f",
            "lineCount": 234
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+0254"
            ],
            "line": "+ [CAPS SHIFT RALT K_O] > U+0254",
            "lineCount": 235
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+006F"
            ],
            "line": "+ [NCAPS K_O] > U+006f",
            "lineCount": 236
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+0254"
            ],
            "line": "+ [NCAPS RALT K_O] > U+0254",
            "lineCount": 237
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+004F"
            ],
            "line": "+ [NCAPS SHIFT K_O] > U+004f",
            "lineCount": 238
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+0186"
            ],
            "line": "+ [NCAPS SHIFT RALT K_O] > U+0186",
            "lineCount": 239
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_O"
                }
            ],
            "outputs": [
                "U+0186"
            ],
            "line": "+ [CAPS RALT K_O] > U+0186",
            "lineCount": 240
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+0050"
            ],
            "line": "+ [CAPS K_P] > U+0050",
            "lineCount": 241
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+0070"
            ],
            "line": "+ [CAPS SHIFT K_P] > U+0070",
            "lineCount": 242
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+00F8"
            ],
            "line": "+ [CAPS SHIFT RALT K_P] > U+00f8",
            "lineCount": 243
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+0070"
            ],
            "line": "+ [NCAPS K_P] > U+0070",
            "lineCount": 244
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+00F8"
            ],
            "line": "+ [NCAPS RALT K_P] > U+00f8",
            "lineCount": 245
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+0050"
            ],
            "line": "+ [NCAPS SHIFT K_P] > U+0050",
            "lineCount": 246
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+00D8"
            ],
            "line": "+ [NCAPS SHIFT RALT K_P] > U+00d8",
            "lineCount": 247
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_P"
                }
            ],
            "outputs": [
                "U+00D8"
            ],
            "line": "+ [CAPS RALT K_P] > U+00d8",
            "lineCount": 248
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+0051"
            ],
            "line": "+ [CAPS K_Q] > U+0051",
            "lineCount": 249
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+0071"
            ],
            "line": "+ [CAPS SHIFT K_Q] > U+0071",
            "lineCount": 250
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+2014"
            ],
            "line": "+ [CAPS SHIFT RALT K_Q] > U+2014",
            "lineCount": 251
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+0071"
            ],
            "line": "+ [NCAPS K_Q] > U+0071",
            "lineCount": 252
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+2014"
            ],
            "line": "+ [NCAPS RALT K_Q] > U+2014",
            "lineCount": 253
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+0051"
            ],
            "line": "+ [NCAPS SHIFT K_Q] > U+0051",
            "lineCount": 254
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+2013"
            ],
            "line": "+ [NCAPS SHIFT RALT K_Q] > U+2013",
            "lineCount": 255
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Q"
                }
            ],
            "outputs": [
                "U+2013"
            ],
            "line": "+ [CAPS RALT K_Q] > U+2013",
            "lineCount": 256
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+0052"
            ],
            "line": "+ [CAPS K_R] > U+0052",
            "lineCount": 257
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+0072"
            ],
            "line": "+ [CAPS SHIFT K_R] > U+0072",
            "lineCount": 258
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+25CC"
            ],
            "line": "+ [CAPS SHIFT RALT K_R] > U+25cc",
            "lineCount": 259
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+0072"
            ],
            "line": "+ [NCAPS K_R] > U+0072",
            "lineCount": 260
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+25CC"
            ],
            "line": "+ [NCAPS RALT K_R] > U+25cc",
            "lineCount": 261
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+0052"
            ],
            "line": "+ [NCAPS SHIFT K_R] > U+0052",
            "lineCount": 262
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+00AE"
            ],
            "line": "+ [NCAPS SHIFT RALT K_R] > U+00ae",
            "lineCount": 263
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_R"
                }
            ],
            "outputs": [
                "U+00AE"
            ],
            "line": "+ [CAPS RALT K_R] > U+00ae",
            "lineCount": 264
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "U+0053"
            ],
            "line": "+ [CAPS K_S] > U+0053",
            "lineCount": 265
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "U+0073"
            ],
            "line": "+ [CAPS SHIFT K_S] > U+0073",
            "lineCount": 266
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "U+0073"
            ],
            "line": "+ [NCAPS K_S] > U+0073",
            "lineCount": 267
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "U+0053"
            ],
            "line": "+ [NCAPS SHIFT K_S] > U+0053",
            "lineCount": 268
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_S] > BEEP",
            "lineCount": 269
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT SHIFT K_S] > BEEP",
            "lineCount": 270
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_S] > BEEP",
            "lineCount": 271
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_S"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT SHIFT K_S] > BEEP",
            "lineCount": 272
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0054"
            ],
            "line": "+ [CAPS K_T] > U+0054",
            "lineCount": 273
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0074"
            ],
            "line": "+ [CAPS SHIFT K_T] > U+0074",
            "lineCount": 274
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0153"
            ],
            "line": "+ [CAPS SHIFT RALT K_T] > U+0153",
            "lineCount": 275
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0074"
            ],
            "line": "+ [NCAPS K_T] > U+0074",
            "lineCount": 276
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0153"
            ],
            "line": "+ [NCAPS RALT K_T] > U+0153",
            "lineCount": 277
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0054"
            ],
            "line": "+ [NCAPS SHIFT K_T] > U+0054",
            "lineCount": 278
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0152"
            ],
            "line": "+ [NCAPS SHIFT RALT K_T] > U+0152",
            "lineCount": 279
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_T"
                }
            ],
            "outputs": [
                "U+0152"
            ],
            "line": "+ [CAPS RALT K_T] > U+0152",
            "lineCount": 280
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0055"
            ],
            "line": "+ [CAPS K_U] > U+0055",
            "lineCount": 281
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0075"
            ],
            "line": "+ [CAPS SHIFT K_U] > U+0075",
            "lineCount": 282
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0289"
            ],
            "line": "+ [CAPS SHIFT RALT K_U] > U+0289",
            "lineCount": 283
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0075"
            ],
            "line": "+ [NCAPS K_U] > U+0075",
            "lineCount": 284
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0289"
            ],
            "line": "+ [NCAPS RALT K_U] > U+0289",
            "lineCount": 285
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0055"
            ],
            "line": "+ [NCAPS SHIFT K_U] > U+0055",
            "lineCount": 286
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0244"
            ],
            "line": "+ [NCAPS SHIFT RALT K_U] > U+0244",
            "lineCount": 287
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_U"
                }
            ],
            "outputs": [
                "U+0244"
            ],
            "line": "+ [CAPS RALT K_U] > U+0244",
            "lineCount": 288
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+0056"
            ],
            "line": "+ [CAPS K_V] > U+0056",
            "lineCount": 289
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+0076"
            ],
            "line": "+ [CAPS SHIFT K_V] > U+0076",
            "lineCount": 290
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+A78C"
            ],
            "line": "+ [CAPS SHIFT RALT K_V] > U+a78c",
            "lineCount": 291
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+0076"
            ],
            "line": "+ [NCAPS K_V] > U+0076",
            "lineCount": 292
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+A78C"
            ],
            "line": "+ [NCAPS RALT K_V] > U+a78c",
            "lineCount": 293
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+0056"
            ],
            "line": "+ [NCAPS SHIFT K_V] > U+0056",
            "lineCount": 294
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "+ [NCAPS SHIFT RALT K_V] > U+a78b",
            "lineCount": 295
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_V"
                }
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "+ [CAPS RALT K_V] > U+a78b",
            "lineCount": 296
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+0057"
            ],
            "line": "+ [CAPS K_W] > U+0057",
            "lineCount": 297
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+0077"
            ],
            "line": "+ [CAPS SHIFT K_W] > U+0077",
            "lineCount": 298
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+1E85"
            ],
            "line": "+ [CAPS SHIFT RALT K_W] > U+1e85",
            "lineCount": 299
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+0077"
            ],
            "line": "+ [NCAPS K_W] > U+0077",
            "lineCount": 300
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+1E85"
            ],
            "line": "+ [NCAPS RALT K_W] > U+1e85",
            "lineCount": 301
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+0057"
            ],
            "line": "+ [NCAPS SHIFT K_W] > U+0057",
            "lineCount": 302
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+1E84"
            ],
            "line": "+ [NCAPS SHIFT RALT K_W] > U+1e84",
            "lineCount": 303
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_W"
                }
            ],
            "outputs": [
                "U+1E84"
            ],
            "line": "+ [CAPS RALT K_W] > U+1e84",
            "lineCount": 304
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "U+0058"
            ],
            "line": "+ [CAPS K_X] > U+0058",
            "lineCount": 305
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "U+0078"
            ],
            "line": "+ [CAPS SHIFT K_X] > U+0078",
            "lineCount": 306
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_X] > BEEP",
            "lineCount": 307
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT SHIFT K_X] > BEEP",
            "lineCount": 308
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "U+0078"
            ],
            "line": "+ [NCAPS K_X] > U+0078",
            "lineCount": 309
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "U+0058"
            ],
            "line": "+ [NCAPS SHIFT K_X] > U+0058",
            "lineCount": 310
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_X] > BEEP",
            "lineCount": 311
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_X"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT SHIFT K_X] > BEEP",
            "lineCount": 312
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+0059"
            ],
            "line": "+ [CAPS K_Y] > U+0059",
            "lineCount": 313
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+0079"
            ],
            "line": "+ [CAPS SHIFT K_Y] > U+0079",
            "lineCount": 314
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+01B4"
            ],
            "line": "+ [CAPS SHIFT RALT K_Y] > U+01b4",
            "lineCount": 315
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+0079"
            ],
            "line": "+ [NCAPS K_Y] > U+0079",
            "lineCount": 316
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+01B4"
            ],
            "line": "+ [NCAPS RALT K_Y] > U+01b4",
            "lineCount": 317
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+0059"
            ],
            "line": "+ [NCAPS SHIFT K_Y] > U+0059",
            "lineCount": 318
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+01B3"
            ],
            "line": "+ [NCAPS SHIFT RALT K_Y] > U+01b3",
            "lineCount": 319
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Y"
                }
            ],
            "outputs": [
                "U+01B3"
            ],
            "line": "+ [CAPS RALT K_Y] > U+01b3",
            "lineCount": 320
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+005A"
            ],
            "line": "+ [CAPS K_Z] > U+005a",
            "lineCount": 321
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+007A"
            ],
            "line": "+ [CAPS SHIFT K_Z] > U+007a",
            "lineCount": 322
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+2026"
            ],
            "line": "+ [CAPS SHIFT RALT K_Z] > U+2026",
            "lineCount": 323
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+007A"
            ],
            "line": "+ [NCAPS K_Z] > U+007a",
            "lineCount": 324
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+2026"
            ],
            "line": "+ [NCAPS RALT K_Z] > U+2026",
            "lineCount": 325
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+005A"
            ],
            "line": "+ [NCAPS SHIFT K_Z] > U+005a",
            "lineCount": 326
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+2020"
            ],
            "line": "+ [NCAPS SHIFT RALT K_Z] > U+2020",
            "lineCount": 327
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_Z"
                }
            ],
            "outputs": [
                "U+2020"
            ],
            "line": "+ [CAPS RALT K_Z] > U+2020",
            "lineCount": 328
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "dk(003b)"
            ],
            "line": "+ [NCAPS K_COLON] > dk(003b)",
            "lineCount": 329
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "dk(003b)"
            ],
            "line": "+ [CAPS K_COLON] > dk(003b)",
            "lineCount": 330
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003A"
            ],
            "line": "+ [NCAPS SHIFT K_COLON] > U+003a",
            "lineCount": 331
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "+ [NCAPS RALT K_COLON] > U+003b",
            "lineCount": 332
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003A"
            ],
            "line": "+ [NCAPS SHIFT RALT K_COLON] > U+003a",
            "lineCount": 333
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003A"
            ],
            "line": "+ [CAPS SHIFT K_COLON] > U+003a",
            "lineCount": 334
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "+ [CAPS RALT K_COLON] > U+003b",
            "lineCount": 335
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COLON"
                }
            ],
            "outputs": [
                "U+003A"
            ],
            "line": "+ [CAPS SHIFT RALT K_COLON] > U+003a",
            "lineCount": 336
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "dk(003d)"
            ],
            "line": "+ [NCAPS K_EQUAL] > dk(003d)",
            "lineCount": 337
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_EQUAL] > BEEP",
            "lineCount": 338
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "U+002B"
            ],
            "line": "+ [NCAPS SHIFT K_EQUAL] > U+002b",
            "lineCount": 339
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "U+00B1"
            ],
            "line": "+ [NCAPS SHIFT RALT K_EQUAL] > U+00b1",
            "lineCount": 340
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "dk(003d)"
            ],
            "line": "+ [CAPS K_EQUAL] > dk(003d)",
            "lineCount": 341
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_EQUAL] > BEEP",
            "lineCount": 342
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "U+002B"
            ],
            "line": "+ [CAPS SHIFT K_EQUAL] > U+002b",
            "lineCount": 343
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_EQUAL"
                }
            ],
            "outputs": [
                "U+00B1"
            ],
            "line": "+ [CAPS SHIFT RALT K_EQUAL] > U+00b1",
            "lineCount": 344
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+002C"
            ],
            "line": "+ [NCAPS K_COMMA] > U+002c",
            "lineCount": 345
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+003C"
            ],
            "line": "+ [NCAPS SHIFT K_COMMA] > U+003c",
            "lineCount": 346
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+2039"
            ],
            "line": "+ [NCAPS RALT K_COMMA] > U+2039",
            "lineCount": 347
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+00AB"
            ],
            "line": "+ [NCAPS SHIFT RALT K_COMMA] > U+00ab",
            "lineCount": 348
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+002C"
            ],
            "line": "+ [CAPS K_COMMA] > U+002c",
            "lineCount": 349
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+003C"
            ],
            "line": "+ [CAPS SHIFT K_COMMA] > U+003c",
            "lineCount": 350
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+2039"
            ],
            "line": "+ [CAPS RALT K_COMMA] > U+2039",
            "lineCount": 351
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_COMMA"
                }
            ],
            "outputs": [
                "U+00AB"
            ],
            "line": "+ [CAPS SHIFT RALT K_COMMA] > U+00ab",
            "lineCount": 352
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+002D"
            ],
            "line": "+ [CAPS K_HYPHEN] > U+002d",
            "lineCount": 353
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+0304"
            ],
            "line": "+ [CAPS RALT K_HYPHEN] > U+0304",
            "lineCount": 354
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+005F"
            ],
            "line": "+ [CAPS SHIFT K_HYPHEN] > U+005f",
            "lineCount": 355
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT SHIFT K_HYPHEN] > BEEP",
            "lineCount": 356
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+002D"
            ],
            "line": "+ [NCAPS K_HYPHEN] > U+002d",
            "lineCount": 357
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+0304"
            ],
            "line": "+ [NCAPS RALT K_HYPHEN] > U+0304",
            "lineCount": 358
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "U+005F"
            ],
            "line": "+ [NCAPS SHIFT K_HYPHEN] > U+005f",
            "lineCount": 359
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT SHIFT K_HYPHEN] > BEEP",
            "lineCount": 360
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS RALT K_HYPHEN] > context",
            "lineCount": 361
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_HYPHEN"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS RALT K_HYPHEN] > context",
            "lineCount": 362
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+002E"
            ],
            "line": "+ [NCAPS K_PERIOD] > U+002e",
            "lineCount": 363
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+003E"
            ],
            "line": "+ [NCAPS SHIFT K_PERIOD] > U+003e",
            "lineCount": 364
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+203A"
            ],
            "line": "+ [NCAPS RALT K_PERIOD] > U+203a",
            "lineCount": 365
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+00BB"
            ],
            "line": "+ [NCAPS SHIFT RALT K_PERIOD] > U+00bb",
            "lineCount": 366
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+002E"
            ],
            "line": "+ [CAPS K_PERIOD] > U+002e",
            "lineCount": 367
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+003E"
            ],
            "line": "+ [CAPS SHIFT K_PERIOD] > U+003e",
            "lineCount": 368
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+203A"
            ],
            "line": "+ [CAPS RALT K_PERIOD] > U+203a",
            "lineCount": 369
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_PERIOD"
                }
            ],
            "outputs": [
                "U+00BB"
            ],
            "line": "+ [CAPS SHIFT RALT K_PERIOD] > U+00bb",
            "lineCount": 370
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+002F"
            ],
            "line": "+ [NCAPS K_SLASH] > U+002f",
            "lineCount": 371
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT SHIFT K_SLASH] > BEEP",
            "lineCount": 372
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+003F"
            ],
            "line": "+ [NCAPS SHIFT K_SLASH] > U+003f",
            "lineCount": 373
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+00F7"
            ],
            "line": "+ [NCAPS RALT K_SLASH] > U+00f7",
            "lineCount": 374
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+002F"
            ],
            "line": "+ [CAPS K_SLASH] > U+002f",
            "lineCount": 375
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT SHIFT K_SLASH] > BEEP",
            "lineCount": 376
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+003F"
            ],
            "line": "+ [CAPS SHIFT K_SLASH] > U+003f",
            "lineCount": 377
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_SLASH"
                }
            ],
            "outputs": [
                "U+00F7"
            ],
            "line": "+ [CAPS RALT K_SLASH] > U+00f7",
            "lineCount": 378
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+030D"
            ],
            "line": "+ [CAPS K_BKQUOTE] > U+030d",
            "lineCount": 379
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+0060"
            ],
            "line": "+ [CAPS RALT K_BKQUOTE] > U+0060",
            "lineCount": 380
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+0303"
            ],
            "line": "+ [CAPS SHIFT K_BKQUOTE] > U+0303",
            "lineCount": 381
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+007E"
            ],
            "line": "+ [CAPS SHIFT RALT K_BKQUOTE] > U+007e",
            "lineCount": 382
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+030D"
            ],
            "line": "+ [NCAPS K_BKQUOTE] > U+030d",
            "lineCount": 383
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+0060"
            ],
            "line": "+ [NCAPS RALT K_BKQUOTE] > U+0060",
            "lineCount": 384
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+0303"
            ],
            "line": "+ [NCAPS SHIFT K_BKQUOTE] > U+0303",
            "lineCount": 385
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "outputs": [
                "U+007E"
            ],
            "line": "+ [NCAPS SHIFT RALT K_BKQUOTE] > U+007e",
            "lineCount": 386
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS K_BKQUOTE] > context",
            "lineCount": 387
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT K_BKQUOTE] > context",
            "lineCount": 388
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS K_BKQUOTE] > context",
            "lineCount": 389
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKQUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT K_BKQUOTE] > context",
            "lineCount": 390
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+0301"
            ],
            "line": "+ [CAPS K_LBRKT] > U+0301",
            "lineCount": 391
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+005B"
            ],
            "line": "+ [CAPS RALT K_LBRKT] > U+005b",
            "lineCount": 392
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+030C"
            ],
            "line": "+ [CAPS SHIFT K_LBRKT] > U+030c",
            "lineCount": 393
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+007B"
            ],
            "line": "+ [CAPS SHIFT RALT K_LBRKT] > U+007b",
            "lineCount": 394
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+0301"
            ],
            "line": "+ [NCAPS K_LBRKT] > U+0301",
            "lineCount": 395
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+005B"
            ],
            "line": "+ [NCAPS RALT K_LBRKT] > U+005b",
            "lineCount": 396
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+030C"
            ],
            "line": "+ [NCAPS SHIFT K_LBRKT] > U+030c",
            "lineCount": 397
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "outputs": [
                "U+007B"
            ],
            "line": "+ [NCAPS SHIFT RALT K_LBRKT] > U+007b",
            "lineCount": 398
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS K_LBRKT] > context",
            "lineCount": 399
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT K_LBRKT] > context",
            "lineCount": 400
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS K_LBRKT] > context",
            "lineCount": 401
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_LBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT K_LBRKT] > context",
            "lineCount": 402
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [NCAPS K_BKSLASH] > U+005c",
            "lineCount": 403
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [NCAPS SHIFT K_BKSLASH] > U+007c",
            "lineCount": 404
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT K_BKSLASH] > BEEP",
            "lineCount": 405
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [NCAPS RALT SHIFT K_BKSLASH] > BEEP",
            "lineCount": 406
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [CAPS K_BKSLASH] > U+005c",
            "lineCount": 407
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [CAPS SHIFT K_BKSLASH] > U+007c",
            "lineCount": 408
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT K_BKSLASH] > BEEP",
            "lineCount": 409
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_BKSLASH"
                }
            ],
            "outputs": [
                "BEEP"
            ],
            "line": "+ [CAPS RALT SHIFT K_BKSLASH] > BEEP",
            "lineCount": 410
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "+ [CAPS K_RBRKT] > U+0327",
            "lineCount": 411
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+005D"
            ],
            "line": "+ [CAPS RALT K_RBRKT] > U+005d",
            "lineCount": 412
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+0308"
            ],
            "line": "+ [CAPS SHIFT K_RBRKT] > U+0308",
            "lineCount": 413
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+007D"
            ],
            "line": "+ [CAPS SHIFT RALT K_RBRKT] > U+007d",
            "lineCount": 414
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "+ [NCAPS K_RBRKT] > U+0327",
            "lineCount": 415
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+005D"
            ],
            "line": "+ [NCAPS RALT K_RBRKT] > U+005d",
            "lineCount": 416
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+0308"
            ],
            "line": "+ [NCAPS SHIFT K_RBRKT] > U+0308",
            "lineCount": 417
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "outputs": [
                "U+007D"
            ],
            "line": "+ [NCAPS SHIFT RALT K_RBRKT] > U+007d",
            "lineCount": 418
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS K_RBRKT] > context",
            "lineCount": 419
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT K_RBRKT] > context",
            "lineCount": 420
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS K_RBRKT] > context",
            "lineCount": 421
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_RBRKT"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT K_RBRKT] > context",
            "lineCount": 422
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0300"
            ],
            "line": "+ [CAPS K_QUOTE] > U+0300",
            "lineCount": 423
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0027"
            ],
            "line": "+ [CAPS RALT K_QUOTE] > U+0027",
            "lineCount": 424
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0302"
            ],
            "line": "+ [CAPS SHIFT K_QUOTE] > U+0302",
            "lineCount": 425
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0022"
            ],
            "line": "+ [CAPS SHIFT RALT K_QUOTE] > U+0022",
            "lineCount": 426
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0300"
            ],
            "line": "+ [NCAPS K_QUOTE] > U+0300",
            "lineCount": 427
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0027"
            ],
            "line": "+ [NCAPS RALT K_QUOTE] > U+0027",
            "lineCount": 428
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0302"
            ],
            "line": "+ [NCAPS SHIFT K_QUOTE] > U+0302",
            "lineCount": 429
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "outputs": [
                "U+0022"
            ],
            "line": "+ [NCAPS SHIFT RALT K_QUOTE] > U+0022",
            "lineCount": 430
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS K_QUOTE] > context",
            "lineCount": 431
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [CAPS SHIFT K_QUOTE] > context",
            "lineCount": 432
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS K_QUOTE] > context",
            "lineCount": 433
        },
        {
            "type": "rule",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_QUOTE"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [NCAPS SHIFT K_QUOTE] > context",
            "lineCount": 434
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [NCAPS K_oE2] > U+005c",
            "lineCount": 435
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [NCAPS SHIFT K_oE2] > U+007c",
            "lineCount": 436
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [NCAPS RALT K_oE2] > U+005c",
            "lineCount": 437
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": true,
                    "isCAPS": false,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [NCAPS SHIFT RALT K_oE2] > U+007c",
            "lineCount": 438
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [CAPS K_oE2] > U+005c",
            "lineCount": 439
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [CAPS SHIFT K_oE2] > U+007c",
            "lineCount": 440
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+005C"
            ],
            "line": "+ [CAPS RALT K_oE2] > U+005c",
            "lineCount": 441
        },
        {
            "type": "rule",
            "inputs": [
                "+",
                {
                    "isSHIFT": true,
                    "isNCAPS": false,
                    "isCAPS": true,
                    "isRALT": true,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "K_OE2"
                }
            ],
            "outputs": [
                "U+007C"
            ],
            "line": "+ [CAPS SHIFT RALT K_oE2] > U+007c",
            "lineCount": 442
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_UPPER"
                }
            ],
            "outputs": [
                "LAYER('DEFAULT')"
            ],
            "line": "+ [T_UPPER] > layer('default')",
            "lineCount": 443
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_FCFA"
                }
            ],
            "outputs": [
                "U+0046",
                "U+0043",
                "U+0046",
                "U+0041"
            ],
            "line": "+ [T_FCFA] > 'FCFA'",
            "lineCount": 444
        },
        {
            "type": "deadEnd",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_CAM"
                }
            ],
            "outputs": [
                "NUL"
            ],
            "line": "+ [T_CAM] > nul",
            "lineCount": 445
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_003F"
                }
            ],
            "outputs": [
                "U+003F"
            ],
            "line": "+ [T_003F] > U+003F",
            "lineCount": 446
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_003B"
                }
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "+ [T_003B] > U+003B",
            "lineCount": 447
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_003A"
                }
            ],
            "outputs": [
                "U+003A"
            ],
            "line": "+ [T_003A] > U+003A",
            "lineCount": 448
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_002E"
                }
            ],
            "outputs": [
                "U+002E"
            ],
            "line": "+ [T_002E] > U+002E",
            "lineCount": 449
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_002C"
                }
            ],
            "outputs": [
                "U+002C"
            ],
            "line": "+ [T_002C] > U+002C",
            "lineCount": 450
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0021"
                }
            ],
            "outputs": [
                "U+0021"
            ],
            "line": "+ [T_0021] > U+0021",
            "lineCount": 451
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0300"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0300] > context",
            "lineCount": 452
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0300"
                }
            ],
            "outputs": [
                "U+0300"
            ],
            "line": "+ [T_0300] > U+0300",
            "lineCount": 453
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0301"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0301] > context",
            "lineCount": 454
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0301"
                }
            ],
            "outputs": [
                "U+0301"
            ],
            "line": "+ [T_0301] > U+0301",
            "lineCount": 455
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0302"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0302] > context",
            "lineCount": 456
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0302"
                }
            ],
            "outputs": [
                "U+0302"
            ],
            "line": "+ [T_0302] > U+0302",
            "lineCount": 457
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0303"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0303] > context",
            "lineCount": 458
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0303"
                }
            ],
            "outputs": [
                "U+0303"
            ],
            "line": "+ [T_0303] > U+0303",
            "lineCount": 459
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0304"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0304] > context",
            "lineCount": 460
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0304"
                }
            ],
            "outputs": [
                "U+0304"
            ],
            "line": "+ [T_0304] > U+0304",
            "lineCount": 461
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0308"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0308] > context",
            "lineCount": 462
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0308"
                }
            ],
            "outputs": [
                "U+0308"
            ],
            "line": "+ [T_0308] > U+0308",
            "lineCount": 463
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_030C"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_030C] > context",
            "lineCount": 464
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_030C"
                }
            ],
            "outputs": [
                "U+030C"
            ],
            "line": "+ [T_030C] > U+030C",
            "lineCount": 465
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_030D"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_030D] > context",
            "lineCount": 466
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_030D"
                }
            ],
            "outputs": [
                "U+030D"
            ],
            "line": "+ [T_030D] > U+030D",
            "lineCount": 467
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0327"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0327] > context",
            "lineCount": 468
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0327"
                }
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "+ [T_0327] > U+0327",
            "lineCount": 469
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0330"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_0330] > context",
            "lineCount": 470
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_0330"
                }
            ],
            "outputs": [
                "U+0330"
            ],
            "line": "+ [T_0330] > U+0330",
            "lineCount": 471
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC4"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_1DC4] > context",
            "lineCount": 472
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC4"
                }
            ],
            "outputs": [
                "U+1DC4"
            ],
            "line": "+ [T_1DC4] > U+1DC4",
            "lineCount": 473
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC5"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_1DC5] > context",
            "lineCount": 474
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC5"
                }
            ],
            "outputs": [
                "U+1DC5"
            ],
            "line": "+ [T_1DC5] > U+1DC5",
            "lineCount": 475
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC6"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_1DC6] > context",
            "lineCount": 476
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC6"
                }
            ],
            "outputs": [
                "U+1DC6"
            ],
            "line": "+ [T_1DC6] > U+1DC6",
            "lineCount": 477
        },
        {
            "type": "rule.touch",
            "inputs": [
                "any(diablock)",
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC7"
                }
            ],
            "isExpandable": true,
            "outputs": [
                "CONTEXT"
            ],
            "line": "any(diablock) + [T_1DC7] > context",
            "lineCount": 478
        },
        {
            "type": "rule.touch",
            "inputs": [
                "+",
                {
                    "isSHIFT": false,
                    "isNCAPS": false,
                    "isCAPS": false,
                    "isRALT": false,
                    "isLALT": false,
                    "isALT": false,
                    "isRCTRL": false,
                    "isLCTRL": false,
                    "isCTRL": false,
                    "isKey": "T_1DC7"
                }
            ],
            "outputs": [
                "U+1DC7"
            ],
            "line": "+ [T_1DC7] > U+1DC7",
            "lineCount": 479
        },
        {
            "type": "goTo",
            "inputs": [
                "match"
            ],
            "outputs": [
                "USE(DEADKEYS)"
            ],
            "line": "match > use(deadkeys)",
            "lineCount": 480
        },
        {
            "line": "group(deadkeys)",
            "lineCount": 481,
            "type": "structural"
        },
        {
            "storeName": "dkf003b",
            "fullStore": "U+0020 U+0030 U+0029 U+0031 U+0032 U+0033 U+0024 U+002A U+0039 U+0028 U+0061 U+0041 U+0062 U+0042 U+0063 U+0043 U+0064 U+0044 U+0065 U+0045 U+0066 U+0046 U+0067 U+0047 U+0068 U+0048 U+0069 U+0049 U+006A U+004A U+006B U+004B U+006C U+004C U+004D U+006E U+004E U+006F U+004F U+0070 U+0050 U+0071 U+0051 U+0072 U+0052 U+0074 U+0054 U+0075 U+0055 U+0076 U+0056 U+0077 U+0057 U+0079 U+0059 U+007A U+005A U+002B U+002D U+002E U+002F U+002C U+003C U+003E U+030D U+0303 U+0301 U+030C U+0327 U+0308 U+0300 U+0302 U+0078 U+0058 U+006D U+005C U+0073 U+0053 U+0034 U+0035 U+0036 U+0037 U+0038",
            "type": "store",
            "storeItems": [
                "U+0020",
                "U+0030",
                "U+0029",
                "U+0031",
                "U+0032",
                "U+0033",
                "U+0024",
                "U+002A",
                "U+0039",
                "U+0028",
                "U+0061",
                "U+0041",
                "U+0062",
                "U+0042",
                "U+0063",
                "U+0043",
                "U+0064",
                "U+0044",
                "U+0065",
                "U+0045",
                "U+0066",
                "U+0046",
                "U+0067",
                "U+0047",
                "U+0068",
                "U+0048",
                "U+0069",
                "U+0049",
                "U+006A",
                "U+004A",
                "U+006B",
                "U+004B",
                "U+006C",
                "U+004C",
                "U+004D",
                "U+006E",
                "U+004E",
                "U+006F",
                "U+004F",
                "U+0070",
                "U+0050",
                "U+0071",
                "U+0051",
                "U+0072",
                "U+0052",
                "U+0074",
                "U+0054",
                "U+0075",
                "U+0055",
                "U+0076",
                "U+0056",
                "U+0077",
                "U+0057",
                "U+0079",
                "U+0059",
                "U+007A",
                "U+005A",
                "U+002B",
                "U+002D",
                "U+002E",
                "U+002F",
                "U+002C",
                "U+003C",
                "U+003E",
                "U+030D",
                "U+0303",
                "U+0301",
                "U+030C",
                "U+0327",
                "U+0308",
                "U+0300",
                "U+0302",
                "U+0078",
                "U+0058",
                "U+006D",
                "U+005C",
                "U+0073",
                "U+0053",
                "U+0034",
                "U+0035",
                "U+0036",
                "U+0037",
                "U+0038"
            ],
            "line": "store(dkf003b) U+0020 U+0030 U+0029 U+0031 U+0032 U+0033 U+0024 U+002A U+0039 U+0028 U+0061 U+0041 U+0062 U+0042 U+0063 U+0043 U+0064 U+0044 U+0065 U+0045 U+0066 U+0046 U+0067 U+0047 U+0068 U+0048 U+0069 U+0049 U+006A U+004A U+006B U+004B U+006C U+004C U+004D U+006E U+004E U+006F U+004F U+0070 U+0050 U+0071 U+0051 U+0072 U+0052 U+0074 U+0054 U+0075 U+0055 U+0076 U+0056 U+0077 U+0057 U+0079 U+0059 U+007A U+005A U+002B U+002D U+002E U+002F U+002C U+003C U+003E U+030D U+0303 U+0301 U+030C U+0327 U+0308 U+0300 U+0302 U+0078 U+0058 U+006D U+005C U+0073 U+0053 U+0034 U+0035 U+0036 U+0037 U+0038",
            "lineCount": 482
        },
        {
            "storeName": "dkt003b",
            "fullStore": "U+003B U+2019 U+201D U+00BC U+00BD U+00BE U+20AC U+00D7 U+2018 U+201C U+025B U+0190 U+0253 U+0181 U+0327 U+00A9 U+0257 U+018A U+0259 U+018F U+00E6 U+00C6 U+02BC U+A78B U+03B1 U+2C6D U+0268 U+0197 U+0330 U+0323 U+1DC5 U+1DC7 U+1DC6 U+1DC4 U+2122 U+014B U+014A U+0254 U+0186 U+00F8 U+00D8 U+2014 U+2013 U+25CC U+00AE U+0153 U+0152 U+0289 U+0244 U+A78C U+A78B U+1E85 U+1E84 U+01B4 U+01B3 U+2026 U+2020 U+00B1 U+0304 U+203A U+00F7 U+2039 U+00AB U+00BB U+0060 U+007E U+005B U+007B U+005D U+007D U+0027 U+0022 nul nul nul nul nul nul nul nul nul nul nul",
            "type": "store",
            "storeItems": [
                "U+003B",
                "U+2019",
                "U+201D",
                "U+00BC",
                "U+00BD",
                "U+00BE",
                "U+20AC",
                "U+00D7",
                "U+2018",
                "U+201C",
                "U+025B",
                "U+0190",
                "U+0253",
                "U+0181",
                "U+0327",
                "U+00A9",
                "U+0257",
                "U+018A",
                "U+0259",
                "U+018F",
                "U+00E6",
                "U+00C6",
                "U+02BC",
                "U+A78B",
                "U+03B1",
                "U+2C6D",
                "U+0268",
                "U+0197",
                "U+0330",
                "U+0323",
                "U+1DC5",
                "U+1DC7",
                "U+1DC6",
                "U+1DC4",
                "U+2122",
                "U+014B",
                "U+014A",
                "U+0254",
                "U+0186",
                "U+00F8",
                "U+00D8",
                "U+2014",
                "U+2013",
                "U+25CC",
                "U+00AE",
                "U+0153",
                "U+0152",
                "U+0289",
                "U+0244",
                "U+A78C",
                "U+A78B",
                "U+1E85",
                "U+1E84",
                "U+01B4",
                "U+01B3",
                "U+2026",
                "U+2020",
                "U+00B1",
                "U+0304",
                "U+203A",
                "U+00F7",
                "U+2039",
                "U+00AB",
                "U+00BB",
                "U+0060",
                "U+007E",
                "U+005B",
                "U+007B",
                "U+005D",
                "U+007D",
                "U+0027",
                "U+0022",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul",
                "nul"
            ],
            "line": "store(dkt003b) U+003B U+2019 U+201D U+00BC U+00BD U+00BE U+20AC U+00D7 U+2018 U+201C U+025B U+0190 U+0253 U+0181 U+0327 U+00A9 U+0257 U+018A U+0259 U+018F U+00E6 U+00C6 U+02BC U+A78B U+03B1 U+2C6D U+0268 U+0197 U+0330 U+0323 U+1DC5 U+1DC7 U+1DC6 U+1DC4 U+2122 U+014B U+014A U+0254 U+0186 U+00F8 U+00D8 U+2014 U+2013 U+25CC U+00AE U+0153 U+0152 U+0289 U+0244 U+A78C U+A78B U+1E85 U+1E84 U+01B4 U+01B3 U+2026 U+2020 U+00B1 U+0304 U+203A U+00F7 U+2039 U+00AB U+00BB U+0060 U+007E U+005B U+007B U+005D U+007D U+0027 U+0022 nul nul nul nul nul nul nul nul nul nul nul",
            "lineCount": 483
        },
        {
            "type": "rule.dk.expandable",
            "inputs": [
                "dk(003b)",
                "any(dkf003b)"
            ],
            "isExpandable": true,
            "outputs": [
                "index(dkt003b,2)"
            ],
            "line": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "lineCount": 484
        },
        {
            "type": "rule.dk",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 485
        },
        {
            "type": "rule.dk",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "lineCount": 486
        },
        {
            "type": "rule.dk",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 487
        },
        {
            "storeName": "dkf003d",
            "fullStore": "U+0020 U+0304 U+030d U+0303 U+0301 U+030",
            "type": "store",
            "storeItems": [
                "U+0020",
                "U+0304",
                "U+030d",
                "U+0303",
                "U+0301",
                "U+030"
            ],
            "line": "store(dkf003d) U+0020 U+0304 U+030d U+0303 U+0301 U+030",
            "lineCount": 488
        },
        {
            "storeName": "dkt003d",
            "fullStore": "U+003d U+02c9 U+02c8 U+007e U+02ca U+02c7 U+00b8 U+02cb U+02c6",
            "type": "store",
            "storeItems": [
                "U+003d",
                "U+02c9",
                "U+02c8",
                "U+007e",
                "U+02ca",
                "U+02c7",
                "U+00b8",
                "U+02cb",
                "U+02c6"
            ],
            "line": "store(dkt003d) U+003d U+02c9 U+02c8 U+007e U+02ca U+02c7 U+00b8 U+02cb U+02c6",
            "lineCount": 489
        },
        {
            "type": "rule.dk.expandable",
            "inputs": [
                "dk(003d)",
                "any(dkf003d)"
            ],
            "isExpandable": true,
            "outputs": [
                "index(dkt003d,2)"
            ],
            "line": "dk(003d) any(dkf003d) > index(dkt003d, 2)",
            "lineCount": 490
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0020"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "dk(003b) U+0020 > U+003B",
            "lineCount": 490,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0030"
            ],
            "outputs": [
                "U+2019"
            ],
            "line": "dk(003b) U+0030 > U+2019",
            "lineCount": 491,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0029"
            ],
            "outputs": [
                "U+201D"
            ],
            "line": "dk(003b) U+0029 > U+201D",
            "lineCount": 492,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0031"
            ],
            "outputs": [
                "U+00BC"
            ],
            "line": "dk(003b) U+0031 > U+00BC",
            "lineCount": 493,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0032"
            ],
            "outputs": [
                "U+00BD"
            ],
            "line": "dk(003b) U+0032 > U+00BD",
            "lineCount": 494,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0033"
            ],
            "outputs": [
                "U+00BE"
            ],
            "line": "dk(003b) U+0033 > U+00BE",
            "lineCount": 495,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0024"
            ],
            "outputs": [
                "U+20AC"
            ],
            "line": "dk(003b) U+0024 > U+20AC",
            "lineCount": 496,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002A"
            ],
            "outputs": [
                "U+00D7"
            ],
            "line": "dk(003b) U+002A > U+00D7",
            "lineCount": 497,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0039"
            ],
            "outputs": [
                "U+2018"
            ],
            "line": "dk(003b) U+0039 > U+2018",
            "lineCount": 498,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0028"
            ],
            "outputs": [
                "U+201C"
            ],
            "line": "dk(003b) U+0028 > U+201C",
            "lineCount": 499,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0061"
            ],
            "outputs": [
                "U+025B"
            ],
            "line": "dk(003b) U+0061 > U+025B",
            "lineCount": 500,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0041"
            ],
            "outputs": [
                "U+0190"
            ],
            "line": "dk(003b) U+0041 > U+0190",
            "lineCount": 501,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0062"
            ],
            "outputs": [
                "U+0253"
            ],
            "line": "dk(003b) U+0062 > U+0253",
            "lineCount": 502,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0042"
            ],
            "outputs": [
                "U+0181"
            ],
            "line": "dk(003b) U+0042 > U+0181",
            "lineCount": 503,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0063"
            ],
            "outputs": [
                "U+0327"
            ],
            "line": "dk(003b) U+0063 > U+0327",
            "lineCount": 504,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0043"
            ],
            "outputs": [
                "U+00A9"
            ],
            "line": "dk(003b) U+0043 > U+00A9",
            "lineCount": 505,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0064"
            ],
            "outputs": [
                "U+0257"
            ],
            "line": "dk(003b) U+0064 > U+0257",
            "lineCount": 506,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0044"
            ],
            "outputs": [
                "U+018A"
            ],
            "line": "dk(003b) U+0044 > U+018A",
            "lineCount": 507,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0065"
            ],
            "outputs": [
                "U+0259"
            ],
            "line": "dk(003b) U+0065 > U+0259",
            "lineCount": 508,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0045"
            ],
            "outputs": [
                "U+018F"
            ],
            "line": "dk(003b) U+0045 > U+018F",
            "lineCount": 509,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0066"
            ],
            "outputs": [
                "U+00E6"
            ],
            "line": "dk(003b) U+0066 > U+00E6",
            "lineCount": 510,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0046"
            ],
            "outputs": [
                "U+00C6"
            ],
            "line": "dk(003b) U+0046 > U+00C6",
            "lineCount": 511,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0067"
            ],
            "outputs": [
                "U+02BC"
            ],
            "line": "dk(003b) U+0067 > U+02BC",
            "lineCount": 512,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0047"
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "dk(003b) U+0047 > U+A78B",
            "lineCount": 513,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0068"
            ],
            "outputs": [
                "U+03B1"
            ],
            "line": "dk(003b) U+0068 > U+03B1",
            "lineCount": 514,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0048"
            ],
            "outputs": [
                "U+2C6D"
            ],
            "line": "dk(003b) U+0048 > U+2C6D",
            "lineCount": 515,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0069"
            ],
            "outputs": [
                "U+0268"
            ],
            "line": "dk(003b) U+0069 > U+0268",
            "lineCount": 516,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0049"
            ],
            "outputs": [
                "U+0197"
            ],
            "line": "dk(003b) U+0049 > U+0197",
            "lineCount": 517,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006A"
            ],
            "outputs": [
                "U+0330"
            ],
            "line": "dk(003b) U+006A > U+0330",
            "lineCount": 518,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004A"
            ],
            "outputs": [
                "U+0323"
            ],
            "line": "dk(003b) U+004A > U+0323",
            "lineCount": 519,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006B"
            ],
            "outputs": [
                "U+1DC5"
            ],
            "line": "dk(003b) U+006B > U+1DC5",
            "lineCount": 520,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004B"
            ],
            "outputs": [
                "U+1DC7"
            ],
            "line": "dk(003b) U+004B > U+1DC7",
            "lineCount": 521,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006C"
            ],
            "outputs": [
                "U+1DC6"
            ],
            "line": "dk(003b) U+006C > U+1DC6",
            "lineCount": 522,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004C"
            ],
            "outputs": [
                "U+1DC4"
            ],
            "line": "dk(003b) U+004C > U+1DC4",
            "lineCount": 523,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004D"
            ],
            "outputs": [
                "U+2122"
            ],
            "line": "dk(003b) U+004D > U+2122",
            "lineCount": 524,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006E"
            ],
            "outputs": [
                "U+014B"
            ],
            "line": "dk(003b) U+006E > U+014B",
            "lineCount": 525,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004E"
            ],
            "outputs": [
                "U+014A"
            ],
            "line": "dk(003b) U+004E > U+014A",
            "lineCount": 526,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006F"
            ],
            "outputs": [
                "U+0254"
            ],
            "line": "dk(003b) U+006F > U+0254",
            "lineCount": 527,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+004F"
            ],
            "outputs": [
                "U+0186"
            ],
            "line": "dk(003b) U+004F > U+0186",
            "lineCount": 528,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0070"
            ],
            "outputs": [
                "U+00F8"
            ],
            "line": "dk(003b) U+0070 > U+00F8",
            "lineCount": 529,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0050"
            ],
            "outputs": [
                "U+00D8"
            ],
            "line": "dk(003b) U+0050 > U+00D8",
            "lineCount": 530,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0071"
            ],
            "outputs": [
                "U+2014"
            ],
            "line": "dk(003b) U+0071 > U+2014",
            "lineCount": 531,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0051"
            ],
            "outputs": [
                "U+2013"
            ],
            "line": "dk(003b) U+0051 > U+2013",
            "lineCount": 532,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0072"
            ],
            "outputs": [
                "U+25CC"
            ],
            "line": "dk(003b) U+0072 > U+25CC",
            "lineCount": 533,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0052"
            ],
            "outputs": [
                "U+00AE"
            ],
            "line": "dk(003b) U+0052 > U+00AE",
            "lineCount": 534,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0074"
            ],
            "outputs": [
                "U+0153"
            ],
            "line": "dk(003b) U+0074 > U+0153",
            "lineCount": 535,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0054"
            ],
            "outputs": [
                "U+0152"
            ],
            "line": "dk(003b) U+0054 > U+0152",
            "lineCount": 536,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0075"
            ],
            "outputs": [
                "U+0289"
            ],
            "line": "dk(003b) U+0075 > U+0289",
            "lineCount": 537,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0055"
            ],
            "outputs": [
                "U+0244"
            ],
            "line": "dk(003b) U+0055 > U+0244",
            "lineCount": 538,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0076"
            ],
            "outputs": [
                "U+A78C"
            ],
            "line": "dk(003b) U+0076 > U+A78C",
            "lineCount": 539,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0056"
            ],
            "outputs": [
                "U+A78B"
            ],
            "line": "dk(003b) U+0056 > U+A78B",
            "lineCount": 540,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0077"
            ],
            "outputs": [
                "U+1E85"
            ],
            "line": "dk(003b) U+0077 > U+1E85",
            "lineCount": 541,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0057"
            ],
            "outputs": [
                "U+1E84"
            ],
            "line": "dk(003b) U+0057 > U+1E84",
            "lineCount": 542,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0079"
            ],
            "outputs": [
                "U+01B4"
            ],
            "line": "dk(003b) U+0079 > U+01B4",
            "lineCount": 543,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0059"
            ],
            "outputs": [
                "U+01B3"
            ],
            "line": "dk(003b) U+0059 > U+01B3",
            "lineCount": 544,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+007A"
            ],
            "outputs": [
                "U+2026"
            ],
            "line": "dk(003b) U+007A > U+2026",
            "lineCount": 545,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+005A"
            ],
            "outputs": [
                "U+2020"
            ],
            "line": "dk(003b) U+005A > U+2020",
            "lineCount": 546,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002B"
            ],
            "outputs": [
                "U+00B1"
            ],
            "line": "dk(003b) U+002B > U+00B1",
            "lineCount": 547,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002D"
            ],
            "outputs": [
                "U+0304"
            ],
            "line": "dk(003b) U+002D > U+0304",
            "lineCount": 548,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002E"
            ],
            "outputs": [
                "U+203A"
            ],
            "line": "dk(003b) U+002E > U+203A",
            "lineCount": 549,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002F"
            ],
            "outputs": [
                "U+00F7"
            ],
            "line": "dk(003b) U+002F > U+00F7",
            "lineCount": 550,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+002C"
            ],
            "outputs": [
                "U+2039"
            ],
            "line": "dk(003b) U+002C > U+2039",
            "lineCount": 551,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+003C"
            ],
            "outputs": [
                "U+00AB"
            ],
            "line": "dk(003b) U+003C > U+00AB",
            "lineCount": 552,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+003E"
            ],
            "outputs": [
                "U+00BB"
            ],
            "line": "dk(003b) U+003E > U+00BB",
            "lineCount": 553,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+030D"
            ],
            "outputs": [
                "U+0060"
            ],
            "line": "dk(003b) U+030D > U+0060",
            "lineCount": 554,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0303"
            ],
            "outputs": [
                "U+007E"
            ],
            "line": "dk(003b) U+0303 > U+007E",
            "lineCount": 555,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0301"
            ],
            "outputs": [
                "U+005B"
            ],
            "line": "dk(003b) U+0301 > U+005B",
            "lineCount": 556,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+030C"
            ],
            "outputs": [
                "U+007B"
            ],
            "line": "dk(003b) U+030C > U+007B",
            "lineCount": 557,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0327"
            ],
            "outputs": [
                "U+005D"
            ],
            "line": "dk(003b) U+0327 > U+005D",
            "lineCount": 558,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0308"
            ],
            "outputs": [
                "U+007D"
            ],
            "line": "dk(003b) U+0308 > U+007D",
            "lineCount": 559,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0300"
            ],
            "outputs": [
                "U+0027"
            ],
            "line": "dk(003b) U+0300 > U+0027",
            "lineCount": 560,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0302"
            ],
            "outputs": [
                "U+0022"
            ],
            "line": "dk(003b) U+0302 > U+0022",
            "lineCount": 561,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0078"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0078 > nul",
            "lineCount": 562,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0058"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0058 > nul",
            "lineCount": 563,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+006D"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+006D > nul",
            "lineCount": 564,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+005C"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+005C > nul",
            "lineCount": 565,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0073"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0073 > nul",
            "lineCount": 566,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0053"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0053 > nul",
            "lineCount": 567,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0034"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0034 > nul",
            "lineCount": 568,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0035"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0035 > nul",
            "lineCount": 569,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0036"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0036 > nul",
            "lineCount": 570,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "U+0037"
            ],
            "outputs": [
                "nul"
            ],
            "line": "dk(003b) U+0037 > nul",
            "lineCount": 571,
            "sourceLine": "dk(003b) any(dkf003b) > index(dkt003b, 2)",
            "sourceLineCount": 484
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 572,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 573,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 574,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 575,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 576,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 577,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 578,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 579,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 580,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 581,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 582,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 583,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 584,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 585,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 586,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 587,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 588,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 589,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 590,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 591,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 592,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 593,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 594,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 595,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 596,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 597,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 598,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 599,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 600,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 601,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 602,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 603,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 604,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 605,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 606,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 607,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 608,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 609,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 610,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 611,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 612,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 613,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 614,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 615,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 616,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 617,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 618,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 619,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 620,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 621,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 622,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 623,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 624,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 625,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 626,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 627,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 628,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 629,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 630,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 631,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 632,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 633,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 634,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 635,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 636,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 637,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 638,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 639,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 640,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 641,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 642,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 643,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 644,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 645,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 646,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 647,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 648,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 649,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 650,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 651,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 652,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003b)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003b) dk(003d) > U+003D",
            "lineCount": 653,
            "sourceLine": "dk(003b) dk(003d) > U+003D",
            "sourceLineCount": 485
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 654,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 655,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 656,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 657,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 658,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 659,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 660,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 661,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 662,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 663,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 664,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 665,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 666,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 667,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 668,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 669,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 670,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 671,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 672,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 673,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 674,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 675,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 676,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 677,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 678,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 679,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 680,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 681,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 682,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 683,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 684,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 685,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 686,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 687,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 688,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 689,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 690,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 691,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 692,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 693,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 694,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 695,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 696,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 697,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 698,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 699,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 700,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 701,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 702,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 703,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 704,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 705,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 706,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 707,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 708,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 709,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 710,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 711,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 712,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 713,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 714,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 715,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 716,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 717,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 718,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 719,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 720,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 721,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 722,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 723,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 724,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 725,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 726,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 727,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 728,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 729,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 730,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 731,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 732,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 733,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 734,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "platform('hardware')",
                "dk(003b)",
                "dk(003b)"
            ],
            "outputs": [
                "U+003B"
            ],
            "line": "platform('hardware') dk(003b) dk(003b) > U+003B",
            "lineCount": 735,
            "sourceLine": "platform('hardware') dk(003b) dk(003b) > U+003b",
            "sourceLineCount": 486
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 736,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 737,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 738,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 739,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 740,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 741,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 742,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 743,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 744,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 745,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 746,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 747,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 748,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 749,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 750,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 751,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 752,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 753,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 754,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 755,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 756,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 757,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 758,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 759,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 760,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 761,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 762,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 763,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 764,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 765,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 766,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 767,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 768,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 769,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 770,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 771,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 772,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 773,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 774,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 775,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 776,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 777,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 778,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 779,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 780,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 781,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 782,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 783,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 784,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 785,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 786,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 787,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 788,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 789,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 790,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 791,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 792,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 793,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 794,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 795,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 796,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 797,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 798,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 799,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 800,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 801,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 802,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 803,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 804,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 805,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 806,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 807,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 808,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 809,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 810,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 811,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 812,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 813,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 814,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 815,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 816,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        },
        {
            "type": "rule.generated",
            "inputs": [
                "dk(003d)",
                "dk(003d)"
            ],
            "outputs": [
                "U+003D"
            ],
            "line": "dk(003d) dk(003d) > U+003D",
            "lineCount": 817,
            "sourceLine": "dk(003d) dk(003d) > U+003D",
            "sourceLineCount": 487
        }
    ]
}